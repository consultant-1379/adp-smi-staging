const CLIENT_ID = 'test-client';
const CLIENT_SECRET = 'supersecretclientsecret';
const PROTOCOL = 'openid-connect';
const PROTOCOL_MAPPER = 'oidc-usersessionmodel-note-mapper';

export default {
  AUDIENCE: 'adp-iam-aa-client',
  DEMO_USER_NAME: 'gas-user',
  DEMO_USER_PASSWORD: 'Ericsson123!',
  ADMIN_USER_NAME: 'uis-admin',
  ADMIN_USER_PASSWORD: 'admin',
  ALL_IN_ONE_GAS: 'all-in-one-gas',
  ALL_IN_ONE_UIS: 'all-in-one-ui-settings',
  UIS_ADMIN_ROLE: 'uis-admin',
  JSON_CONTENT_TYPE: { 'Content-Type': 'application/json; charset=UTF-8' },
  POST_METHOD: 'POST',
  PUT_METHOD: 'PUT',
  GET_METHOD: 'GET',
  PROTOCOL: 'https',
  AUTH_REQ: 'auth/realms/master/protocol/openid-connect/token',
  REALMS_REQ: 'auth/admin/realms',
  URLENCODED_HEADER: { 'Content-Type': 'application/x-www-form-urlencoded' },
  CLIENT_ID,
  CLIENT_SECRET,
  CLIENT_CONFIG: {
    clientId: CLIENT_ID,
    name: '',
    description: '',
    rootUrl: '',
    adminUrl: '',
    baseUrl: '',
    surrogateAuthRequired: false,
    enabled: true,
    alwaysDisplayInConsole: false,
    clientAuthenticatorType: 'client-secret',
    secret: CLIENT_SECRET,
    redirectUris: ['/*'],
    webOrigins: ['/*'],
    notBefore: 0,
    bearerOnly: false,
    consentRequired: false,
    standardFlowEnabled: true,
    implicitFlowEnabled: false,
    directAccessGrantsEnabled: true,
    serviceAccountsEnabled: true,
    authorizationServicesEnabled: true,
    publicClient: false,
    frontchannelLogout: true,
    protocol: PROTOCOL,
    attributes: {
      'oidc.ciba.grant.enabled': 'false',
      'oauth2.device.authorization.grant.enabled': 'false',
      'client.secret.creation.time': '1701773446',
      'backchannel.logout.session.required': 'true',
      'backchannel.logout.revoke.offline.tokens': 'false',
    },
    authenticationFlowBindingOverrides: {},
    fullScopeAllowed: true,
    nodeReRegistrationTimeout: -1,
    protocolMappers: [
      {
        name: 'Client ID',
        protocol: PROTOCOL,
        protocolMapper: PROTOCOL_MAPPER,
        consentRequired: false,
        config: {
          'user.session.note': 'client_id',
          'id.token.claim': 'true',
          'access.token.claim': 'true',
          'claim.name': 'client_id',
          'jsonType.label': 'String',
        },
      },
      {
        name: 'Client Host',
        protocol: PROTOCOL,
        protocolMapper: PROTOCOL_MAPPER,
        consentRequired: false,
        config: {
          'user.session.note': 'clientHost',
          'id.token.claim': 'true',
          'access.token.claim': 'true',
          'claim.name': 'clientHost',
          'jsonType.label': 'String',
        },
      },
      {
        name: 'Client IP Address',
        protocol: PROTOCOL,
        protocolMapper: PROTOCOL_MAPPER,
        consentRequired: false,
        config: {
          'user.session.note': 'clientAddress',
          'id.token.claim': 'true',
          'access.token.claim': 'true',
          'claim.name': 'clientAddress',
          'jsonType.label': 'String',
        },
      },
      {
        name: 'Last Login Time Mapper',
        protocol: 'openid-connect',
        protocolMapper: 'oidc-last-login-time-mapper',
        consentRequired: false,
        config: {
          'id.token.claim': 'true',
          'access.token.claim': 'true',
          'claim.name': 'last-login-time',
          'userinfo.token.claim': 'true',
        },
      },
    ],
    defaultClientScopes: ['web-origins', 'acr', 'roles', 'profile', 'email', 'profile-adp-auth'],
    optionalClientScopes: ['roles'],
    access: {
      view: true,
      configure: true,
      manage: true,
    },
  },
};
